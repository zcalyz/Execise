#reference: http://www.cnblogs.com/alipayhutu/archive/2012/06/21/2558249.html

#rootLogger指定日志级别； appender决定日志去向：控制台、文件、DB
#两个appender表示可以指定两个去向
log4j.rootLogger=INFO,appender1,appender2
# ALL < DEBUG < INFO < WARN	< ERROR < FATAL < OFF

log4j.appender.appender1=org.apache.log4j.ConsoleAppender
#org.apache.log4j.日志去向
	#ConsoleAppender 控制台
	#FileAppender 文件
	#WriteAppender 将日志信息以流方式发送到指定地方
	#JDBCAppender 

log4j.appender.appender1.layout=org.apache.log4j.PatternLayout
#决定日志的输出格式
	#PatternLayout 可以灵活指定格式，用的最多  和下面的ConversionPattern 配合使用
	#HTMLLayout 以html表格形式输出
	
	
log4j.appender.appender1.layout.ConversionPattern=[%d{yy/MM/dd HH:mm:ss:SSS}] %m%n
#指定输出的具体格式
	# %m 输出代码中指定的信息，如log(message)中的message
	# %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
	# %d 输出日志时间点的日期或时间，默认格式为ISO8601 比如：%d{yyy-M-dd HH:mm:ss }
	# %c 输出日志信息所属的类的全名
	# 其它参考上述网址

log4j.appender.appender2=org.apache.log4j.FileAppender

log4j.appender.appender2.File=logs/mylog.html

log4j.appender.appender2.layout=org.apache.log4j.PatternLayout

#log4j.appender.appender2.layout.ConversionPattern=[%d{yy/MM/dd HH:mm:ss:SSS}] %m%n
